name: CI/CD

on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Ruby
        uses: actions/setup-ruby@v1
      - name: Gem Cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Site Assets Cache
        id: cache-assets
        uses: actions/cache@v2
        with:
          path: build/assets
          key: ${{ runner.os }}-test-site-${{ hashFiles('assets/**') }}
          restore-keys: |
            ${{ runner.os }}-test-site-
      - name: Restore site assets
        if: steps.cache-assets.outputs.cache-hit
        run: |
          # The shrinker puts its images in the source directory so that the webp plugin can process
          # them.
          cp build/assets/resized assets/ -r
      - name: Prep site
        run: |
          bundle config path vendor/bundle
          bundle install
          touch resume/AlexSaveau.pdf
          echo "url: http://localhost:4000" > _config_ci.yml
      - name: Validate HTML
        run: |
          # Run the build twice so webp generation can work on the resized images
          # The webp plugin performs caching based file modification timestamps.
          find build/assets -type f -exec touch {} +
          bundle exec jekyll build --config _config.yml,_config_ci.yml
          # The webp plugin performs caching based file modification timestamps.
          find build/assets -type f -exec touch {} +
          bundle exec jekyll build --config _config.yml,_config_ci.yml

          bundle exec jekyll serve --no-watch --detach --skip-initial-build
          bundle exec htmlproofer --assume-extension \
            --check-html --check-favicon --check-opengraph \
            --report-eof-tags --report-mismatched-tags --report-invalid-tags --report-missing-names \
            --file-ignore ./build/google1cff0bc53ad1c64c.html \
            ./build
      - name: Upload site
        uses: actions/upload-artifact@v2
        with:
          name: site
          path: build/

  perf:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v2.0.0
        with:
          node-version: '12'
      - name: Install Ruby
        uses: actions/setup-ruby@v1
      - name: Gem Cache
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: NPM Cache
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Download site
        uses: actions/download-artifact@v2
        with:
          name: site
          path: build/
      - name: Prep
        run: |
          bundle config path vendor/bundle
          bundle install
          (cd .build && npm ci)
      - name: Run Lighthouse
        run: |
          bundle exec jekyll serve --no-watch --detach --skip-initial-build
          ./.build/node_modules/.bin/lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
